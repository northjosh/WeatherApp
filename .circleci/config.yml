# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

#commands

commands:
  print_pipeline_id:
    description: "A demo command to print pipeline Id"
    steps:
      - run: echo ${CIRCLE_WORKFLOW_ID}
# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  say-hello:
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    docker:
      - image: cimg/base:stable
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      - checkout
      - run:
          name: "Say hello"
          command: "echo Hello, World!"
  print-hello:
    docker:
      - image: circleci/node:13.8.0

    steps:
      - checkout
      - run:
          name: "Print Hello"
          command: "echo Hello"

  print-world:
    docker:
      - image: circleci/node:13.8.0

    steps:
      - checkout
      - run:
          name: "Print World"
          command: "echo World"

  print-env-var:
    docker:
      - image: cimg/base:2020.01

    steps:
      - checkout
      - run:
          name: "Print Env Variable"
          command: |
            echo $env_var_1

  save_hello_world_outputs:
    docker:
      - image: cimg/base:2020.01

    steps:
      - checkout
      - run:
          name: "Store Hello World in File"
          command: echo "Hello World" > output.txt
      - persist_to_workspace:
          root: .
          paths: ./*

  print_output_file:
    docker:
      - image: cimg/base:2020.01

    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          command: cat output.txt

  print_id:
    docker:
      - image: cimg/base:2020.01

    steps:
      - print_pipeline_id

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  say-hello-workflow:
    jobs:
      - say-hello
      - print-hello
      - print-world:
          requires: [print-hello]

  test-env-vars:
    jobs:
      - print-env-var

  print_output_file:
    jobs:
      - save_hello_world_outputs
      - print_output_file:
          requires: [save_hello_world_outputs]

  print_pipe_id:
    jobs:
      - print_id
